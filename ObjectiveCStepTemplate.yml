# STEPS LEVEL TEMPLATE:
# Used to build Objective-C
# Reusable
# Used to "hide" the additional variables specific to this SDK which shouldn't be set from a higher level, or
#   shared from a multi-build pipeline like a publish

parameters:
- name: ApiSpecSource
  displayName: ApiSpecSource
  type: string
  default: -apiSpecGitUrl https://raw.githubusercontent.com/PlayFab/API_Specs/master/
- name: CommitMessage
  displayName: CommitMessage
  type: string
  default: Automated build from ADO Pipeline
- name: GitDestBranch
  displayName: GitDestBranch
  type: string
  default: doNotCommit
- name: SdkName
  displayName: SdkName
  type: string
  default: Objective_C_SDK
- name: GitJSetupBranch
  displayName: GitJSetupBranch
  type: string
  default: master
- name: GitSdkGenBranch
  displayName: GitSdkGenBranch
  type: string
  default: master
- name: isVersioned
  displayName: isVersioned
  type: boolean
  default: false
- name: SelfTemplateResource
  displayName: SelfTemplateResource
  type: string
  default: self

steps:
- checkout: JenkinsSdkSetupScripts
  clean: true
  path: s
- checkout: API_Specs
  clean: true
  path: s/API_Specs
- checkout: SdkGenerator
  clean: true
  path: s/SdkGenerator
- checkout: ${{ parameters.SelfTemplateResource }}
  clean: true
  submodules: true
  path: s/sdks/Objective_C_SDK
  persistCredentials: true
- bash: |
    set -e
    
    echo alias the ADO variables into local variables
    ApiSpecSource="${{ parameters.ApiSpecSource }}"
    CommitMessage="${{ parameters.CommitMessage }}"
    GitDestBranch="${{ parameters.GitDestBranch }}"
    SdkName="${{ parameters.SdkName }}"
    WORKSPACE=$(pwd)
    # Hack attempt to get WORKSPACE into a sub-environment
    export WORKSPACE="$WORKSPACE"
     
    echo === there seems to be an app center login issue that occurs in testInit on macs === 
    echo . "$WORKSPACE/JenkinsSdkSetupScripts/JenkinsScripts/Pipeline/testInit.sh"
    cd "$WORKSPACE/SDKGenerator/SDKBuildScripts"
    . ./shared_build.sh
    
    echo === Build the Objective C Project ===
    cd $WORKSPACE/sdks/$SdkName/Example/PFExample/
    pwd
    ls
    xcodebuild -project PFExample.xcodeproj -scheme -list build

    if [ "$isVersioned" = "true" ]; then
        echo === TODO: consider publishing to homebrew ===
    fi
  displayName: 'Build/Test/Report'
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '*.xml'
    testRunTitle: ObjectiveCTemplate
